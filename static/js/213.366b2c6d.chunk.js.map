{"version":3,"file":"static/js/213.366b2c6d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","redux/filter/selectors.js","components/ContactList/ContactList.js","components/Loading/Loading.styled.js","components/Loading/Loading.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 20px;\n  width: 200px;\n  min-height: 120px;\n\n  border: 1.5px solid #647c90;\n  border-radius: 5px;\n`;\n\nexport const FormGroup = styled.div`\n  &:not(:last-child) {\n    padding-bottom: 10px;\n  }\n`;\n\nexport const FormLabel = styled.label`\nfont-weight: 700;\ncolor: #647c90;\n}\n`;\n\nexport const FormInput = styled.input`\n  box-sizing: border-box;\n  margin-top: 5px;\n  padding: 5px 0 5px 10px;\n\n  width: 100%;\n  outline: none;\n\n  &:focus {\n    outline: 1.5px solid #647c90;\n  }\n\n  &:last-child {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const FormSubmitBtn = styled.button`\n  display: block;\n  margin: 0 auto;\n  padding: 10px;\n\n  cursor: pointer;\n  color: #fff;\n  background-color: #647c90;\n  border-radius: 5px;\n  border: 1px solid transparent;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  &:hover,\n  &:focus {\n    color: #647c90;\n    background-color: #fff;\n    border: 1px solid #647c90;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport {\n  Form,\n  FormGroup,\n  FormLabel,\n  FormInput,\n  FormSubmitBtn,\n} from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const checkIfContactExists = contactName =>\n    contacts.find(({ name }) => name === contactName);\n\n  let contact = {};\n\n  const createContact = (name, number) => {\n      contact = {\n        name,\n        number\n      }\n  }\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkIfContactExists(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    createContact(name, number);\n    dispatch(addContact(contact));\n    console.log(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form action=\"\" onSubmit={handleSubmit}>\n      <FormGroup>\n        <FormLabel>\n          Name:\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n          />\n        </FormLabel>\n      </FormGroup>\n      <FormGroup>\n        <FormLabel>\n          Number:\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n          />\n        </FormLabel>\n      </FormGroup>\n\n      <FormSubmitBtn type=\"submit\">Add contact</FormSubmitBtn>\n    </Form>\n  );\n}\n\n\n\n\n","import styled from '@emotion/styled';\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  border: 1.5px solid #647c90;\n  border-bottom-left-radius: 10px;\n`;\n\nexport const TableTh = styled.th`\n  width: 200px;\n  padding: 15px;\n  border: 1.5px solid #647c90;\n`;\n// export const List = styled.ul`\n//   padding: 0;\n//   margin: 0;\n//   list-style: none;\n// `;\n","import styled from '@emotion/styled';\n\nexport const TableTd = styled.td`\n  padding: 15px;\n  border: 1.5px solid #647c90;\n`;\n\nexport const TableItem = styled.tr`\n  font-weight: 500;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const TableItemButton = styled.button`\n  display: block;\n  margin: 0 auto;\n  padding: 10px;\n  width: 100px;\n\n  cursor: pointer;\n  color: #fff;\n  background-color: #970c10;\n  font-weight: 400;\n  border: 1px solid transparent;\n  border-radius: 5px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  &:hover {\n    color: #970c10;\n    background-color: #fff;\n    border: 1px solid #970c10;\n  }\n`;\n\n\n\n\n// export const ListItem = styled.li`\n//   font-weight: 500;\n\n//   &:not(:last-child) {\n//     margin-bottom: 5px;\n//   }\n// `;\n\n// export const ListItemButton = styled.button`\n//   margin-left: 20px;\n//   padding: 5px;\n\n//   cursor: pointer;\n//   color: #fff;\n//   background-color: #970c10;\n//   border-radius: 10px;\n//   border: 1px solid transparent;\n//   transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n//     background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n//     border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n//   &:not(:last-child) {\n//     margin-right: 10px;\n//   }\n\n//   &:hover {\n//     color: #970c10;\n//     background-color: #fff;\n//     border: 1px solid #970c10;\n//   }\n// `;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n// import { ListItem, ListItemButton } from './ContactListItem.styled';\nimport { TableTd, TableItem, TableItemButton } from './ContactListItem.styled';\n\nexport default function ContactListItem({ contact }) {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <TableItem key={id}>\n      <TableTd>{name}</TableTd>\n      <TableTd>{number}</TableTd>\n      <TableTd>\n        <TableItemButton onClick={handleDelete}>Delete</TableItemButton>\n      </TableTd>\n    </TableItem>\n  );\n}\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n\n// return (\n//   <ListItem key={id}>\n//     {name} : {number}\n//     <ListItemButton onClick={handleDelete}>Delete</ListItemButton>\n//   </ListItem>\n// );\n","export const getFilter = state => state.filter.filterText;","// import { List } from './ContactList.styled';\nimport { Table, TableTh } from './ContactList.styled';\nimport ContactListItem from '../ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { getFilter } from '../../redux/filter/selectors';\n\nconst getVisibleContacts = (contacts, contactsFilter) =>\n  contactsFilter\n    ? contacts.filter(contact =>\n        contact.name.toUpperCase().includes(contactsFilter)\n      )\n    : contacts;\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  console.log(`contacts ${contacts}`);\n  const normalizedContactsFilter = useSelector(getFilter).toUpperCase();\n  const visibleContacts = getVisibleContacts(\n    contacts,\n    normalizedContactsFilter\n  );\n  return (\n    <Table>\n      <thead>\n      <tr>\n      <TableTh>Name</TableTh>\n      <TableTh>Phone</TableTh>\n      <TableTh>Action</TableTh>\n      </tr>\n      </thead>\n      <tbody>\n      {visibleContacts.map(contact => (\n        <ContactListItem key={contact.id} contact={contact} />\n      ))}\n      </tbody>\n    </Table>\n  );\n}\n\n// return (\n//   <List>\n//     {visibleContacts.map(contact => (\n//       <ContactListItem key={contact.id} contact={contact} />\n//     ))}\n//   </List>\n// );\n","import styled from '@emotion/styled';\n\nexport const LoadingText = styled.p`\n  margin-top: 20px;\n  color: red;\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import { LoadingText } from './Loading.styled';\n\nexport default function Loading() {\n\n  return (\n    <LoadingText />\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FilterForm = styled.form`\n  margin-bottom: 20px;\n`;\n\nexport const FilterLabel = styled.label`\n  font-weight: 700;\n  color: #647c90;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px 0 5px 10px;\n  margin-left: 10px;\n\n  outline: none;\n  font-weight: normal;\n  color: #3B3B3B;\n\n  &:focus {\n    outline: 2px solid #647c90;\n  }\n`;\n","import { setFilter } from 'redux/filter/slice';\nimport { useDispatch } from 'react-redux';\nimport { FilterForm, FilterLabel, FilterInput } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const handleFilterChange = e => {\n    const inputVal = e.target.value;\n    dispatch(setFilter(inputVal));\n  };\n  return (\n    <FilterForm>\n      <FilterLabel>\n        Search:\n        <FilterInput\n          name=\"contactsFilter\"\n          title=\"\"\n          onChange={handleFilterChange}\n        />\n      </FilterLabel>\n    </FilterForm>\n  );\n}\n","import { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Loading from '../components/Loading';\nimport Filter from '../components/Filter';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\nconst styles = {\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '40px',\n  },\n  formBlock: {\n    marginRight: '100px',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 30,\n  },\n  smallTitle: {\n    fontWeight: 500,\n    fontSize: 20,\n    marginTop: '40px',\n  },\n  center: {\n    textAlign: 'center',\n  },\n};\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <main style={styles.main}>\n      <div style={styles.formBlock}>\n        {/* <h1 style={styles.title && styles.center}>Phonebook</h1> */}\n        <ContactForm />\n        {isLoading && <Loading />}\n      </div>\n      <div>\n        <div style={styles.center}>\n          {/* <h2 style={styles.smallTitle}>Contacts</h2> */}\n          <Filter />\n        </div>\n        <ContactList />\n      </div>\n    </main>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","Form","styled","FormGroup","FormLabel","FormInput","FormSubmitBtn","ContactForm","dispatch","useDispatch","useSelector","contact","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","action","onSubmit","contactName","preventDefault","find","alert","createContact","addContact","console","log","type","pattern","title","required","onChange","Table","TableTh","TableTd","TableItem","TableItemButton","ContactListItem","id","onClick","deleteContact","getFilter","filter","filterText","ContactList","visibleContacts","contactsFilter","toUpperCase","includes","getVisibleContacts","map","LoadingText","Loading","FilterForm","FilterLabel","FilterInput","Filter","inputVal","target","setFilter","styles","main","display","justifyContent","marginTop","formBlock","marginRight","fontWeight","fontSize","smallTitle","center","textAlign","Contacts","useEffect","fetchContacts","style"],"sourceRoot":""}